# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.7
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_ksp_console', [dirname(__file__)])
        except ImportError:
            import _ksp_console
            return _ksp_console
        if fp is not None:
            try:
                _mod = imp.load_module('_ksp_console', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _ksp_console = swig_import_helper()
    del swig_import_helper
else:
    import _ksp_console
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        if _newclass:
            object.__setattr__(self, name, value)
        else:
            self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



_ksp_console.KSP_INPUT_YAW_swigconstant(_ksp_console)
KSP_INPUT_YAW = _ksp_console.KSP_INPUT_YAW

_ksp_console.KSP_INPUT_ROLL_swigconstant(_ksp_console)
KSP_INPUT_ROLL = _ksp_console.KSP_INPUT_ROLL

_ksp_console.KSP_INPUT_PITCH_swigconstant(_ksp_console)
KSP_INPUT_PITCH = _ksp_console.KSP_INPUT_PITCH

_ksp_console.KSP_INPUT_XTRANS_swigconstant(_ksp_console)
KSP_INPUT_XTRANS = _ksp_console.KSP_INPUT_XTRANS

_ksp_console.KSP_INPUT_YTRANS_swigconstant(_ksp_console)
KSP_INPUT_YTRANS = _ksp_console.KSP_INPUT_YTRANS

_ksp_console.KSP_INPUT_ZTRANS_swigconstant(_ksp_console)
KSP_INPUT_ZTRANS = _ksp_console.KSP_INPUT_ZTRANS

_ksp_console.KSP_INPUT_THRUST_swigconstant(_ksp_console)
KSP_INPUT_THRUST = _ksp_console.KSP_INPUT_THRUST

_ksp_console.BUTTON_STAGE_swigconstant(_ksp_console)
BUTTON_STAGE = _ksp_console.BUTTON_STAGE

_ksp_console.BUTTON_RCS_swigconstant(_ksp_console)
BUTTON_RCS = _ksp_console.BUTTON_RCS

_ksp_console.BUTTON_SAS_swigconstant(_ksp_console)
BUTTON_SAS = _ksp_console.BUTTON_SAS

_ksp_console.BUTTON_GEAR_swigconstant(_ksp_console)
BUTTON_GEAR = _ksp_console.BUTTON_GEAR

_ksp_console.BUTTON_SWITCH_RIGHT_swigconstant(_ksp_console)
BUTTON_SWITCH_RIGHT = _ksp_console.BUTTON_SWITCH_RIGHT

_ksp_console.BUTTON_SWITCH_LEFT_swigconstant(_ksp_console)
BUTTON_SWITCH_LEFT = _ksp_console.BUTTON_SWITCH_LEFT

_ksp_console.BUTTON_LIGHTS_swigconstant(_ksp_console)
BUTTON_LIGHTS = _ksp_console.BUTTON_LIGHTS

_ksp_console.BUTTON_BREAKS_swigconstant(_ksp_console)
BUTTON_BREAKS = _ksp_console.BUTTON_BREAKS

_ksp_console.BUTTON_ACTION_1_swigconstant(_ksp_console)
BUTTON_ACTION_1 = _ksp_console.BUTTON_ACTION_1

_ksp_console.BUTTON_ACTION_2_swigconstant(_ksp_console)
BUTTON_ACTION_2 = _ksp_console.BUTTON_ACTION_2

_ksp_console.BUTTON_ACTION_3_swigconstant(_ksp_console)
BUTTON_ACTION_3 = _ksp_console.BUTTON_ACTION_3

_ksp_console.BUTTON_ACTION_4_swigconstant(_ksp_console)
BUTTON_ACTION_4 = _ksp_console.BUTTON_ACTION_4

_ksp_console.BUTTON_ACTION_5_swigconstant(_ksp_console)
BUTTON_ACTION_5 = _ksp_console.BUTTON_ACTION_5

_ksp_console.BUTTON_ACTION_6_swigconstant(_ksp_console)
BUTTON_ACTION_6 = _ksp_console.BUTTON_ACTION_6

_ksp_console.BUTTON_ACTION_7_swigconstant(_ksp_console)
BUTTON_ACTION_7 = _ksp_console.BUTTON_ACTION_7

_ksp_console.BUTTON_ACTION_8_swigconstant(_ksp_console)
BUTTON_ACTION_8 = _ksp_console.BUTTON_ACTION_8

_ksp_console.BUTTON_ACTION_9_swigconstant(_ksp_console)
BUTTON_ACTION_9 = _ksp_console.BUTTON_ACTION_9

_ksp_console.BUTTON_ACTION_10_swigconstant(_ksp_console)
BUTTON_ACTION_10 = _ksp_console.BUTTON_ACTION_10

_ksp_console.BUTTON_SOLAR_ON_swigconstant(_ksp_console)
BUTTON_SOLAR_ON = _ksp_console.BUTTON_SOLAR_ON

_ksp_console.BUTTON_SOLAR_OFF_swigconstant(_ksp_console)
BUTTON_SOLAR_OFF = _ksp_console.BUTTON_SOLAR_OFF

_ksp_console.INFO_HEIGHT_swigconstant(_ksp_console)
INFO_HEIGHT = _ksp_console.INFO_HEIGHT

_ksp_console.INFO_SPEED_swigconstant(_ksp_console)
INFO_SPEED = _ksp_console.INFO_SPEED

_ksp_console.INFO_ACTION_GROUPS_swigconstant(_ksp_console)
INFO_ACTION_GROUPS = _ksp_console.INFO_ACTION_GROUPS
# This file is compatible with both classic and new-style classes.


